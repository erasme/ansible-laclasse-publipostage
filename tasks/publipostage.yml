- name: Creates deploy user
  user:
    name={{ laclasse_publipostage_deploy_user }}
    comment="laclasse user"
  notify: Restart laclasse-publipostage

- name: Creates deploy directory
  file:
    path: "~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/"
    owner: "{{ laclasse_publipostage_deploy_user }}"
    state: directory
  notify: Restart laclasse-publipostage

- name: Checkout app
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  git:
    repo: "{{ laclasse_publipostage_repos }}"
    dest: "~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/"
    version: "{{ laclasse_publipostage_version }}"
    accept_hostkey: true
    force: true
  register: __laclasse_publipostage_new_version
  notify: Restart laclasse-publipostage

- name: Gets current tag
  shell: cd ~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/ && git describe --always --tag
  changed_when: false
  register: git_tag
  tags: laclasse:publipostage:config

- name: Check if a bundle is required
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  shell: cd ~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/; bash -lc 'bundle check --no-color --path ~/bundler_shared/ || true'
  changed_when: __laclasse_publipostage_bundle_required.stdout != "The Gemfile's dependencies are satisfied"
  register: __laclasse_publipostage_bundle_required

- name: Bundles pack application
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  shell: cd ~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/; bash -lc 'bundle pack --no-color --all --path  ~/bundler_shared/'
  when: __laclasse_publipostage_bundle_required|changed

- name: Bundles application
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  shell: cd ~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/; bash -lc 'bundle --no-color --deployment --path  ~/bundler_shared/'
  when: __laclasse_publipostage_bundle_required|changed
  notify: Restart laclasse-publipostage

- name: Adds version.json
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  template:
    src: "../templates/version.json.j2"
    dest: "~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/public/version.json"

- name: Adds application config
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  register: __laclasse_publipostage_new_config
  template:
    src: "../templates/{{ item }}.j2"
    dest: "~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/config/{{ item }}"
  with_items:
    - options.rb
    - puma.rb
  tags: laclasse:publipostage:config
  notify: Restart laclasse-publipostage

- name: Adds client side config
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  template:
    src: "../templates/constants.js.j2"
    dest: "~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/public/app/scripts/services/constants.js"
  tags: laclasse:publipostage:config

- name: Binstubs puma
  sudo_user: "{{ laclasse_publipostage_deploy_user }}"
  sudo: true
  shell: cd ~{{ laclasse_publipostage_deploy_user }}/laclasse-publipostage/; bash -lc "bundle binstubs puma"
  register: puma_has_been_binstubbed
  changed_when: '"Skipped puma since it already exists" in puma_has_been_binstubbed'
  notify: Restart laclasse-publipostage

- name: Deploys init script
  template:
    src: "../templates/laclasse-publipostage.init.j2"
    dest: /etc/init.d/laclasse-publipostage
    mode: 0770
  notify: Restart laclasse-publipostage

- name: Creates PID and log dirs
  file:
    dest: "{{ item }}/laclasse-publipostage/"
    owner: "{{ laclasse_publipostage_deploy_user }}"
    group: "{{ laclasse_publipostage_deploy_user }}"
    mode: 750
    state: directory
  with_items:
    - "{{ laclasse_log_parent_dir }}"
  notify: Restart laclasse-publipostage

- name: Registers init script
  shell: update-rc.d laclasse-publipostage defaults
  when: __laclasse_publipostage_new_version|changed
  notify: Restart laclasse-publipostage

- name: Check if firewall is opened
  shell: iptables-save
  register: needs_iptables
  changed_when: needs_iptables.stdout.find("laclasse-publipostage") == -1
  when: laclasse_environment == 'production' and firewall is defined

- name: Open firewall
  shell: iptables -A TCP_IN -p tcp -m tcp --dport {{ laclasse_publipostage_port}} -j ACCEPT -m comment --comment laclasse-publipostage
  ignore_errors: true
  when: needs_iptables | changed and laclasse_environment == 'production'

- name: Saves firewall
  shell: iptables-save > {{ firewall.rules_file }}
  when: needs_iptables | changed and laclasse_environment == 'production'
